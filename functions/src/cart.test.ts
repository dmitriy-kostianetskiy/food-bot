import { CategoryModel, MenuModel } from './model'

import { Cart } from './cart'

const categories: CategoryModel[] = [
  {
    title: '–û–≤–æ—â–∏',
    ingredients: [
      '–ú–æ—Ä–∫–æ–≤—å'
    ]
  },
  {
    title: '–§—Ä—É–∫—Ç—ã',
    ingredients: [
      '–Ø–±–ª–æ–∫–æ'
    ]
  }
]

test('should place apples and carrots into fruits and vegetables categories accordingly', () => {
  const menu: MenuModel = {
    dinners: [
      {
        id: 'meal-id',
        main: {
          ingredients: [
            {
              title: '–ú–æ—Ä–∫–æ–≤—å',
              amount: 1,
              unit: '–∫–≥'
            },
            {
              title: '–Ø–±–ª–æ–∫–æ',
              amount: 2,
              unit: '—à—Ç'
            }
          ],
          steps: [],
          title: 'Meal'
        }
      }
    ]
  }

  const cart = new Cart(menu, categories)

  expect(cart.print()).toBe(
`üõí <b>–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>
<b>–û–≤–æ—â–∏</b>
 - –ú–æ—Ä–∫–æ–≤—å - 1 –∫–≥ (1)
<b>–§—Ä—É–∫—Ç—ã</b>
 - –Ø–±–ª–æ–∫–æ - 2 —à—Ç (1)`
  )
})

test('should set indexes and sum up weight accordingly', () => {
  const menu: MenuModel = {
    dinners: [
      {
        id: 'meal-1-id',
        main: {
          ingredients: [
            {
              title: '–ú–æ—Ä–∫–æ–≤—å',
              amount: 1,
              unit: '–∫–≥'
            },
            {
              title: '–Ø–±–ª–æ–∫–æ',
              amount: 2,
              unit: '—à—Ç'
            }
          ],
          steps: [],
          title: 'Meal'
        }
      },
      {
        id: 'meal-2-id',
        main: {
          ingredients: [
            {
              title: '–ú–æ—Ä–∫–æ–≤—å',
              amount: 3,
              unit: '–∫–≥'
            },
            {
              title: '–Ø–±–ª–æ–∫–æ',
              amount: 3,
              unit: '—à—Ç'
            }
          ],
          steps: [],
          title: 'Meal'
        }
      }
    ]
  }

  const cart = new Cart(menu, categories)

  expect(cart.print()).toBe(
`üõí <b>–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>
<b>–û–≤–æ—â–∏</b>
 - –ú–æ—Ä–∫–æ–≤—å - 4 –∫–≥ (1, 2)
<b>–§—Ä—É–∫—Ç—ã</b>
 - –Ø–±–ª–æ–∫–æ - 5 —à—Ç (1, 2)`
  )
})

test('should not display unit of measure', () => {
  const menu: MenuModel = {
    dinners: [
      {
        id: 'meal-id',
        main: {
          ingredients: [
            {
              title: '–°–æ–ª—å'
            }
          ],
          steps: [],
          title: 'Meal'
        }
      }
    ]
  }

  const cart = new Cart(menu, categories)

  expect(cart.print()).toBe(
`üõí <b>–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>
<b>–î—Ä—É–≥–æ–µ</b>
 - –°–æ–ª—å (1)`
  )
})
